// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc839.ReboundRumble;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap 
{
    public static Jaguar     drivetrainleftDrivePodJaguar;
    public static Jaguar     drivetrainrightDrivePodJaguar;
    public static RobotDrive drivetrainRobotDrive;
    public static Victor     intakeintakeVictor;
    public static Victor     conveyorconveyorVictor;
    public static Servo      shooterHoodhoodServo;
    public static Victor     bridgeArmbridgeVictor;
    public static Jaguar     shootershooterJaguar;
    
    public static void init() 
    {
        drivetrainleftDrivePodJaguar  = new Jaguar(1, 1);
        drivetrainrightDrivePodJaguar = new Jaguar(1, 2);
        
        drivetrainRobotDrive = new RobotDrive(drivetrainleftDrivePodJaguar, drivetrainrightDrivePodJaguar);
	
        drivetrainRobotDrive.setSafetyEnabled(true);
        drivetrainRobotDrive.setExpiration(0.1);
        drivetrainRobotDrive.setSensitivity(0.5);
        drivetrainRobotDrive.setMaxOutput(1.0);
        drivetrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        drivetrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);        
        
        intakeintakeVictor     = new Victor(1, 3);
        conveyorconveyorVictor = new Victor(1, 4);
        shooterHoodhoodServo   = new Servo (1, 5);
        bridgeArmbridgeVictor  = new Victor(1, 6);
        shootershooterJaguar   = new Jaguar(1, 7);
        
	LiveWindow.addActuator( "Drivetrain" , "leftDrivePodJaguar" , drivetrainleftDrivePodJaguar  );
	LiveWindow.addActuator( "Drivetrain" , "rightDrivePodJaguar", drivetrainrightDrivePodJaguar );
	LiveWindow.addActuator( "Intake"     , "intakeVictor"       , intakeintakeVictor            );
	LiveWindow.addActuator( "Conveyor"   , "conveyorVictor"     , conveyorconveyorVictor        );
	LiveWindow.addActuator( "ShooterHood", "hoodServo"          , shooterHoodhoodServo          );
	LiveWindow.addActuator( "BridgeArm"  , "bridgeVictor"       , bridgeArmbridgeVictor         );
	LiveWindow.addActuator( "Shooter"    , "shooterJaguar"      , shootershooterJaguar          );
        
    }
}
